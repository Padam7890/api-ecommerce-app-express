generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "mysql"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       Int              @id @default(autoincrement())
  email                    String           @unique
  name                     String?
  password                 String
  createdAt                DateTime         @default(now())
  passwordChangedAt        DateTime?
  passwordResetToken       String?
  passwordResetTokenExpire DateTime?
  favourites               Favourites[]
  orders                   Order[]
  billingAddress           BillingAddress[]
  roles                    Role[]
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  users       User[]
  permissions RolePermission[]
}

model Permission {
  id         Int              @id @default(autoincrement())
  permission String           @unique
  slug       String           @unique
  roles      RolePermission[]
}

model RolePermission {
  id            Int        @id @default(autoincrement())
  role_id       Int
  permission_id Int
  Role          Role       @relation(fields: [role_id], references: [id])
  Permission    Permission @relation(fields: [permission_id], references: [id])
}

model Subscribe {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
}

model Favourites {
  id          Int      @id @default(autoincrement())
  user_id     Int
  product_id  Int
  category_id Int
  user        User     @relation(fields: [user_id], references: [id])
  product     Product  @relation(fields: [product_id], references: [id])
  category    Category @relation(fields: [category_id], references: [id])
}


model Product {
  id                  Int              @id @default(autoincrement())
  product_title       String           
  product_description String           @db.Text
  regular_price       Decimal
  sale_price          Decimal
  product_sku         Int?
  stock_type          String
  category_id         Int
  subcategory_id      Int?
  is_featured         Boolean          @default(false)
  product_quantity    Decimal?
  product_weight      Decimal?
  product_size        Decimal?
  product_color       String?
  product_hot         Boolean          @default(false)
  favourites          Favourites[]
  tags                Tag[]
  category            Category         @relation(fields: [category_id], references: [id])
  subcategory         Subcategory?     @relation(fields: [subcategory_id], references: [id])
  ProductTag          ProductTag[]
  OrderItem           OrderItem[]
  images              ProductsImages[]
}

model ProductsImages {
  id         Int     @id @default(autoincrement())
  imageUrl   String
  product    Product @relation(fields: [product_id], references: [id])
  product_id Int
}

model Order {
  id             Int             @id @default(autoincrement())
  user_id        Int
  orderitems     OrderItem[]
  billingAddress BillingAddress?
  totalPrice     Float
  createdAt      DateTime        @default(now())
  user           User            @relation(fields: [user_id], references: [id])
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order_id   Int
  product_id Int
  quantity   Int
  price      Decimal
  order      Order   @relation(fields: [order_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
}

model BillingAddress {
  id            Int     @id @default(autoincrement())
  user          User    @relation(fields: [user_id], references: [id])
  order         Order   @relation(fields: [order_id], references: [id])
  order_id      Int     @unique
  user_id       Int
  firstName     String
  lastName      String
  companyName   String?
  streetAddress String
  country       String
  state         String
  zip           String
  email         String
  phone         String
}

// new added

model ClientTestimonial {
  id           Int      @id @default(autoincrement())
  clientName   String
  clientImage  String?
  clientType   String?
  clientRating Int?
  testimonial  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Tag {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  products   Product[]
  ProductTag ProductTag[]
}

model ProductTag {
  id         Int     @id @default(autoincrement())
  product_id Int
  tags_id    Int
  product    Product @relation(fields: [product_id], references: [id])
  tags       Tag     @relation(fields: [tags_id], references: [id])
}

model Ad {
  id          Int       @id @default(autoincrement())
  Title       String
  subtitle    String
  startTime   DateTime?
  endTime     DateTime?
  description String?
  url         String
}

model Category {
  id            Int           @id @default(autoincrement())
  category_name String
  products      Product[]
  imageUrl      String?
  favourites    Favourites[]
  subcategories Subcategory[]
}

model Subcategory {
  id               Int       @id @default(autoincrement())
  subcategory_name String
  imageUrl         String?
  category_id      Int
  products         Product[]
  category         Category  @relation(fields: [category_id], references: [id])
}

model Banner {
  id       Int    @id @default(autoincrement())
  title    String
  subtitle String @db.Text
  url      String
  imageUrl String
}

model Menu {
  id        Int    @id @default(autoincrement())
  title     String
  parent_id Int?
  parent    Menu?  @relation("MenuSubmenu", fields: [parent_id], references: [id])
  children  Menu[] @relation("MenuSubmenu")
}

model Logo {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String
  url      String
}
