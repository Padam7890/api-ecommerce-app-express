generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Image {
  id      Int       @id @default(autoincrement())
  url     String
  type    ImageType
  type_id Int
}

enum ImageType {
  Category
  Product
  Subcategory
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  name       String?
  password   String
  favourites Favourites[]
  orders     Order[]
}

model Favourites {
  id          Int      @id @default(autoincrement())
  user_id     Int
  product_id  Int
  category_id Int
  user        User     @relation(fields: [user_id], references: [id])
  product     Product  @relation(fields: [product_id], references: [id])
  category    Category @relation(fields: [category_id], references: [id])
}

model Product {
  id                  Int          @id @default(autoincrement())
  product_title       String
  product_description String       @db.Text
  regular_price       Decimal
  sale_price          Decimal
  product_sku         Int?
  stock_type          String
  category_id         Int
  subcategory_id      Int?
  is_featured         Boolean      @default(false)
  product_quantity    Decimal?
  product_weight      Decimal?
  product_size        Decimal?
  product_color       String?
  favourites          Favourites[]
  tags                Tag[]
  category            Category     @relation(fields: [category_id], references: [id])
  subcategory         Subcategory? @relation(fields: [subcategory_id], references: [id])
  ProductTag          ProductTag[]
  orders              Order[]
  OrderItem           OrderItem[]
}

model Order {
  id         Int         @id @default(autoincrement())
  user_id    Int
  products   Product[]
  orderitems OrderItem[]
  totalPrice Float
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [user_id], references: [id])
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order_id   Int
  product_id Int
  quantity   Int
  order      Order   @relation(fields: [order_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
}

model Tag {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  products   Product[]
  ProductTag ProductTag[]
}

model ProductTag {
  id         Int     @id @default(autoincrement())
  product_id Int
  tags_id    Int
  product    Product @relation(fields: [product_id], references: [id])
  tags       Tag     @relation(fields: [tags_id], references: [id])
}

model Category {
  id            Int           @id @default(autoincrement())
  category_name String
  products      Product[]
  favourites    Favourites[]
  subcategories Subcategory[]
}

model Subcategory {
  id               Int       @id @default(autoincrement())
  subcategory_name String
  category_id      Int
  products         Product[]
  category         Category  @relation(fields: [category_id], references: [id])
}

model Banner {
  id       Int    @id @default(autoincrement())
  title    String
  subtitle String @db.Text
  url      String
  imageUrl String
}

model Logo {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String
  url      String
}
